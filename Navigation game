import random

class Navigation():
    
    def __init__ (self):
        '''This function defines the size of the game board
           and the location of X on the board'''
        self.c = random.randint(5,10)
        self.d = random.randint(5,10)
        self.a = random.randint(0,5)
        self.b = random.randint(0,5)
        self.e = random.randint(0,5)
        self.f = random.randint(0,5)
        
    def matrix(self):
        '''The function creates an array.'''
        board=[]
        for x in range(self.c):
            board.append([]) #creates internal empty lists
            for y in range(self.d):
                board[x].append("-") # fills the lists
        board[self.e][self.f]="O" #places a random O
        return board   

    def direction(self):
        '''This function controls the location of X on 
           the board and allows to quit the control process.'''
       
        board[self.a][self.b]='X'
        print ('\n'.join(map(str, board)))
        while board[self.a][self.b] != board[self.e][self.f]:
            print("To move the 'X' please type:\n 'U' to go up\n 'D' to go down\n 'L' to go left\n 'R' to go right\n 'Q' to quit")
            dire=input().upper()
            if dire == "D":
                self.a+=1
                if len(board[:][:]) == self.a:
                    self.a+=-1
                    print('\n'.join(map(str, board)))
                    print("You cannot go down anymore from here!")
                else: 
                    board[self.a][self.b]="X"
                    board[self.a-1][self.b]="-"
                    print('\n'.join(map(str, board)))

            elif dire == "U":
                self.a += -1
                if -1 == self.a:
                    self.a+=1
                    print('\n'.join(map(str, board)))
                    print("You cannot go up anymore from here!")
                else: 
                    board[self.a][self.b]="X"
                    board[self.a+1][self.b]="-"
                    print('\n'.join(map(str, board)))            
            elif dire == "L":
                self.b += -1
                if -1 == self.b:
                    self.b += 1
                    print('\n'.join(map(str, board)))
                    print("You cannot go left from here!")
                else: 
                    board[self.a][self.b]="X"
                    board[self.a][self.b+1]="-"
                    print('\n'.join(map(str, board)))   
            elif dire == "R":
                self.b += 1
                if len(board[:][1]) == self.b:
                    self.b += -1
                    print('\n'.join(map(str, board)))
                    print("You cannot go right from here!")
                else: 
                    board[self.a][self.b]="X"
                    board[self.a][self.b-1]="-"
                    print('\n'.join(map(str, board)))  
            elif dire == "Q":
                break
                

    def endgame(self):
            print("Do you want to play again?")
            answer = input()
            if answer.lower() == "y":
                flag=True
            else:
                print("Good bye!")  
                flag=False
                
                
# The game
print("Welcome to the board game!")
print("\n")
print('Please move X to O.')

flag=True
while flag:
    board=[]
    game = Navigation()
    board=game.matrix()
    game.direction()
    print("Do you want to play again?")
    answer = input()
    if answer.lower() == "y":
        flag=True
    else:
        print("Good bye!")  
        flag=False
